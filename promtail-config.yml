server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /var/lib/promtail/positions.yaml

clients:
  # Loki client
  - url: http://loki:3100/loki/api/v1/push

  # Splunk HEC client
  - url: http://splunk:8088/services/collector
    bearer_token: ${SPLUNK_TOKEN}
    tls_config:
      insecure_skip_verify: true

scrape_configs:

  # 1) Docker container logs
  - job_name: docker
    static_configs:
      - targets: ['localhost']
        labels:
          job: docker
          host: ${HOSTNAME}
          __path__: /var/lib/docker/containers/*/*-json.log

    pipeline_stages:
      - docker: {}
      - json:
          expressions:
            ts: ts
            level: level
            message: message
            client: client
      - match:
          selector: '{__error__=""}'
          stages:
            - replace:
                expression: '(?i)^WARN$'
                replace: 'WARNING'
                source: level
            - labels:
                level:
                client:
            - timestamp:
                source: ts
                format: RFC3339Nano
            - output:
                source: message
      - match:
          selector: '{__error__!=""}'
          stages:
            - labeldrop:
                - __error__
            - regex:
                expression: '^(?P<ts>\d{4}-\d{2}-\d{2}T[0-9:.+-]+)\s+(?P<level>DEBUG|INFO|WARN|WARNING|ERROR|CRITICAL)\s+(?P<message>.+?)\s+(?P<client>[\w .''-]+)$'
            - replace:
                expression: '(?i)^WARN$'
                replace: 'WARNING'
                source: level
            - labels:
                level:
                client:
            - timestamp:
                source: ts
                format: RFC3339Nano
            - output:
                source: message
      - metrics:
          log_entries_total:
            type: Counter
            config:
              match_all: true
            description: "Total Docker log entries"

  # 2) Persistor application logs (plain text or JSON)
  - job_name: app_logs
    static_configs:
      - targets: ['localhost']
        labels:
          job: app
          host: ${HOSTNAME}
          __path__:
            - /mnt/logs/auth/*.json
            - /mnt/logs/payment/*.json
            - /mnt/logs/system/*.json
            - /mnt/logs/application/*.json

    pipeline_stages:
      - json:
          expressions:
            ts: ts
            level: level
            message: message
            client: client
      - match:
          selector: '{__error__=""}'
          stages:
            - labels:
                level:
                client:
            - timestamp:
                source: ts
                format: RFC3339Nano
            - output:
                source: message
      - match:
          selector: '{__error__!=""}'
          stages:
            - labeldrop:
                - __error__
            - regex:
                expression: '^(?P<ts>\d{4}-\d{2}-\d{2}T[0-9:.+-]+)\s+(?P<level>DEBUG|INFO|WARN|WARNING|ERROR|CRITICAL)\s+(?P<message>.+?)\s+(?P<client>[\w .''-]+)$'
            - replace:
                expression: '(?i)^WARN$'
                replace: 'WARNING'
                source: level
            - labels:
                level:
                client:
            - timestamp:
                source: ts
                format: RFC3339Nano
            - output:
                source: message
      - metrics:
          log_entries_total:
            type: Counter
            config:
              match_all: true
            description: "Total application log entries"
